version: '3.8'
version: "3.9"

services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    ports:
      - "5432:5432"

  app:
    build: ./app
    restart: always
    ports:
      - "5001:5000"
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/test


version: '3.8'

services:
  web:
    build: ./app
    restart: always
    ports:
      - "5001:5000"
    volumes:
      - ./app:/app
    image: web:pyapp
    container_name: pyapp_container
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/test
  db:
    image: postgres:15-alpine
    restart: always
    #build: ./db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    ports:
      - "5433:5432"
version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST: db
      - POSTGRES_DB: test
      #DATABASE_URL: postgres://postgres:postgres@db:5432/test
    ports:
      - "5432:5432" # Remove in production
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount init script (optional)
  app:
    build: ./app # Specify the build context
    depends_on:
      - db
    environment:
      - POSTGRES_USER = ${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST: db
      - POSTGRES_DB: test
    ports:
      - "5001:5000"
    volumes:
      - ./app:/app # Mount the app directory
    command: python appy.py

volumes:
  db_data:
  #- /var/lib/docker/volume/pyapp_db_data/_data:/var/lib/postgresql/data

    #driver:local